{
  "info": {
    "_postman_id": "e333951b-ab5d-4685-a228-11c8177519af",
    "name": "Petstore, the troublemaker of OpenAPI 3.0",
    "description": "Some sample APIs collected by International Network Support & Service - Glas.\nThis document contains endpoints containing APIs that don't have only common formats like application/json, but more uncommon but standard formats like float numbers and special characters like german Umlaute.\nThis is to test & check if a tool can handle also those formats.\n\nContact Support:\n Email: info@inss.ch",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "books",
      "item": [
        {
          "name": "getAll",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/hal+json"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/books",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "books"
              ]
            }
          },
          "response": [
            {
              "name": "OK",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/books",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "books"
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/hal+json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"_embedded\": [\n    {\n      \"_links\": [\n        {\n          \"deprecation\": \"ipsum incididunt in\",\n          \"href\": \"proident\",\n          \"hreflang\": \"Ut nulla occaecat quis\",\n          \"media\": \"sunt officia non do\",\n          \"rel\": \"quis\",\n          \"templated\": true,\n          \"title\": \"in ut est proident\",\n          \"type\": \"eu sit laboris\"\n        },\n        {\n          \"deprecation\": \"nisi cupidatat id\",\n          \"href\": \"do in\",\n          \"hreflang\": \"dolor consequat sint amet laborum\",\n          \"media\": \"dolore\",\n          \"rel\": \"voluptate cupidatat qui\",\n          \"templated\": true,\n          \"title\": \"veniam Duis adipisicing\",\n          \"type\": \"cillum mollit dolore magna\"\n        }\n      ],\n      \"book\": {\n        \"author\": \"fugiat aute Lorem adipisicing tempor\",\n        \"errorMsg\": \"adipisicing anim consectetur i\",\n        \"id\": 20905388,\n        \"language\": \"m\",\n        \"title\": \"fugiat Ut deserunt e\"\n      }\n    },\n    {\n      \"_links\": [\n        {\n          \"deprecation\": \"culpa consequat in\",\n          \"href\": \"ad deserunt Duis\",\n          \"hreflang\": \"culpa Ut\",\n          \"media\": \"Lorem esse elit\",\n          \"rel\": \"tempor sunt ullamco\",\n          \"templated\": true,\n          \"title\": \"enim nisi dolor culpa magna\",\n          \"type\": \"fugiat voluptate\"\n        },\n        {\n          \"deprecation\": \"proident\",\n          \"href\": \"laborum dolor irure\",\n          \"hreflang\": \"ea irure\",\n          \"media\": \"nulla enim reprehenderit\",\n          \"rel\": \"cillum pariatur\",\n          \"templated\": false,\n          \"title\": \"mollit magna ullamco in in\",\n          \"type\": \"in ex\"\n        }\n      ],\n      \"book\": {\n        \"author\": \"tempor non eu et\",\n        \"errorMsg\": \"dolore ea dolor\",\n        \"id\": 21972774,\n        \"language\": \"laborum consequat ea magna eiusmod\",\n        \"title\": \"sed Excepteur anim\"\n      }\n    }\n  ],\n  \"_links\": [\n    {\n      \"deprecation\": \"occaecat\",\n      \"href\": \"esse Ut\",\n      \"hreflang\": \"sunt sit adipisicing consectetur\",\n      \"media\": \"in aliquip ullamco velit\",\n      \"rel\": \"sed ad\",\n      \"templated\": true,\n      \"title\": \"est ad\",\n      \"type\": \"reprehenderit irure\"\n    },\n    {\n      \"deprecation\": \"sunt quis do\",\n      \"href\": \"exercitation anim Ut ut\",\n      \"hreflang\": \"Excepteur reprehenderit Ut magna\",\n      \"media\": \"dolore ea amet Lorem\",\n      \"rel\": \"dolo\",\n      \"templated\": false,\n      \"title\": \"et irure in\",\n      \"type\": \"consequat officia in\"\n    }\n  ]\n}"
            },
            {
              "name": "Unauthorized",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/books",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "books"
                  ]
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "_postman_previewlanguage": "text",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "cookie": [],
              "body": ""
            },
            {
              "name": "Forbidden",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/books",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "books"
                  ]
                }
              },
              "status": "Forbidden",
              "code": 403,
              "_postman_previewlanguage": "text",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "cookie": [],
              "body": ""
            },
            {
              "name": "Not Found",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/books",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "books"
                  ]
                }
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "text",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "cookie": [],
              "body": ""
            }
          ]
        },
        {
          "name": "getAllByCustomerId",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/hal+json"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/books/:customerId",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "books",
                ":customerId"
              ],
              "variable": [
                {
                  "key": "customerId",
                  "value": "-5672936",
                  "description": "(Required) customerId"
                }
              ]
            }
          },
          "response": [
            {
              "name": "OK",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/books/:customerId",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "books",
                    ":customerId"
                  ],
                  "variable": [
                    {
                      "key": "customerId",
                      "value": "-5672936",
                      "description": "(Required) customerId"
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/hal+json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"_embedded\": [\n    {\n      \"_links\": [\n        {\n          \"deprecation\": \"in minim s\",\n          \"href\": \"sed Lorem ut sunt\",\n          \"hreflang\": \"consequat do\",\n          \"media\": \"est\",\n          \"rel\": \"ea dolore mollit\",\n          \"templated\": false,\n          \"title\": \"est et id pariatur\",\n          \"type\": \"velit aliqua in sunt\"\n        },\n        {\n          \"deprecation\": \"cupidatat cillum consectetur proident\",\n          \"href\": \"commodo Lorem Excepteur\",\n          \"hreflang\": \"enim ipsum\",\n          \"media\": \"occaecat adipisicing Duis\",\n          \"rel\": \"nulla est officia\",\n          \"templated\": false,\n          \"title\": \"in enim incididunt do\",\n          \"type\": \"et occaecat Duis\"\n        }\n      ],\n      \"book\": {\n        \"author\": \"in mollit dolor cupidatat\",\n        \"errorMsg\": \"irure aute occaecat consequat\",\n        \"id\": -29810691,\n        \"language\": \"exercitation labore\",\n        \"title\": \"do in\"\n      }\n    },\n    {\n      \"_links\": [\n        {\n          \"deprecation\": \"laboris in\",\n          \"href\": \"pariatur tempor laboris exercitation\",\n          \"hreflang\": \"exercitation proident cupidatat\",\n          \"media\": \"adipisicing in\",\n          \"rel\": \"aliqua et\",\n          \"templated\": false,\n          \"title\": \"Ut in magna sunt\",\n          \"type\": \"id consectetur cupidatat Lorem\"\n        },\n        {\n          \"deprecation\": \"ut sunt elit dolor laboris\",\n          \"href\": \"reprehenderit irure do\",\n          \"hreflang\": \"voluptate in\",\n          \"media\": \"labore officia sed venia\",\n          \"rel\": \"velit\",\n          \"templated\": true,\n          \"title\": \"cillum sint nisi dolor\",\n          \"type\": \"\"\n        }\n      ],\n      \"book\": {\n        \"author\": \"in Excepteur\",\n        \"errorMsg\": \"Lorem exercitation Ut labore\",\n        \"id\": 87921985,\n        \"language\": \"esse\",\n        \"title\": \"consectetur ullamco\"\n      }\n    }\n  ],\n  \"_links\": [\n    {\n      \"deprecation\": \"veniam commodo aliqua\",\n      \"href\": \"proident minim in laborum non\",\n      \"hreflang\": \"commodo dolore est\",\n      \"media\": \"culpa dolor Ut dolore\",\n      \"rel\": \"commodo minim labore\",\n      \"templated\": false,\n      \"title\": \"magna veniam voluptate minim\",\n      \"type\": \"aute dolor laborum do\"\n    },\n    {\n      \"deprecation\": \"reprehe\",\n      \"href\": \"irure Ut cu\",\n      \"hreflang\": \"cupidatat sint irure Ut\",\n      \"media\": \"sit minim exercitation\",\n      \"rel\": \"laboris proident tempor\",\n      \"templated\": true,\n      \"title\": \"aute\",\n      \"type\": \"pariatur dolor\"\n    }\n  ]\n}"
            },
            {
              "name": "Unauthorized",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/books/:customerId",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "books",
                    ":customerId"
                  ],
                  "variable": [
                    {
                      "key": "customerId",
                      "value": "-5672936",
                      "description": "(Required) customerId"
                    }
                  ]
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "_postman_previewlanguage": "text",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "cookie": [],
              "body": ""
            },
            {
              "name": "Forbidden",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/books/:customerId",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "books",
                    ":customerId"
                  ],
                  "variable": [
                    {
                      "key": "customerId",
                      "value": "-5672936",
                      "description": "(Required) customerId"
                    }
                  ]
                }
              },
              "status": "Forbidden",
              "code": 403,
              "_postman_previewlanguage": "text",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "cookie": [],
              "body": ""
            },
            {
              "name": "Not Found",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/books/:customerId",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "books",
                    ":customerId"
                  ],
                  "variable": [
                    {
                      "key": "customerId",
                      "value": "-5672936",
                      "description": "(Required) customerId"
                    }
                  ]
                }
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "text",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "cookie": [],
              "body": ""
            }
          ]
        }
      ]
    },
    {
      "name": "customers",
      "item": [
        {
          "name": "{id}",
          "item": [
            {
              "name": "get",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/hal+json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/customers/:id",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "customers",
                    ":id"
                  ],
                  "variable": [
                    {
                      "key": "id",
                      "value": "-5672936",
                      "description": "(Required) id"
                    }
                  ]
                }
              },
              "response": [
                {
                  "name": "OK",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/customers/:id",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "customers",
                        ":id"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "-5672936",
                          "description": "(Required) id"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/hal+json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"_links\": [\n    {\n      \"deprecation\": \"nulla ad proident quis\",\n      \"href\": \"est Excepteur veniam irure\",\n      \"hreflang\": \"irure\",\n      \"media\": \"irure aute proident\",\n      \"rel\": \"nulla velit\",\n      \"templated\": false,\n      \"title\": \"fugiat\",\n      \"type\": \"irure commodo\"\n    },\n    {\n      \"deprecation\": \"nulla\",\n      \"href\": \"reprehenderit nisi sint qui\",\n      \"hreflang\": \"quis adipisicing\",\n      \"media\": \"in labore irure Duis\",\n      \"rel\": \"voluptate commodo\",\n      \"templated\": false,\n      \"title\": \"cillum reprehenderit\",\n      \"type\": \"eu commodo do labore anim\"\n    }\n  ],\n  \"customer\": {\n    \"company\": \"cillum ea\",\n    \"errorMsg\": \"cillum labore cupidatat ipsum\",\n    \"id\": 44763365,\n    \"name\": \"cillum\"\n  }\n}"
                },
                {
                  "name": "Unauthorized",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/customers/:id",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "customers",
                        ":id"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "-5672936",
                          "description": "(Required) id"
                        }
                      ]
                    }
                  },
                  "status": "Unauthorized",
                  "code": 401,
                  "_postman_previewlanguage": "text",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "cookie": [],
                  "body": ""
                },
                {
                  "name": "Forbidden",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/customers/:id",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "customers",
                        ":id"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "-5672936",
                          "description": "(Required) id"
                        }
                      ]
                    }
                  },
                  "status": "Forbidden",
                  "code": 403,
                  "_postman_previewlanguage": "text",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "cookie": [],
                  "body": ""
                },
                {
                  "name": "Not Found",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/customers/:id",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "customers",
                        ":id"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "-5672936",
                          "description": "(Required) id"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "text",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "cookie": [],
                  "body": ""
                }
              ]
            },
            {
              "name": "delete",
              "request": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/hal+json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/customers/:id",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "customers",
                    ":id"
                  ],
                  "variable": [
                    {
                      "key": "id",
                      "value": "-5672936",
                      "description": "(Required) id"
                    }
                  ]
                }
              },
              "response": [
                {
                  "name": "OK",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/customers/:id",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "customers",
                        ":id"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "-5672936",
                          "description": "(Required) id"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/hal+json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"_links\": [\n    {\n      \"deprecation\": \"aute\",\n      \"href\": \"mollit exercitation adipisicing dolore\",\n      \"hreflang\": \"tempor\",\n      \"media\": \"enim eu non\",\n      \"rel\": \"qui cupidatat nulla sunt sint\",\n      \"templated\": true,\n      \"title\": \"ut pariatur et quis labore\",\n      \"type\": \"elit voluptate consectetur\"\n    },\n    {\n      \"deprecation\": \"nostrud aliquip\",\n      \"href\": \"adipisicing ad sed enim\",\n      \"hreflang\": \"et laboris consequat aliqua\",\n      \"media\": \"aute consequat ipsum\",\n      \"rel\": \"adipisicing voluptate\",\n      \"templated\": true,\n      \"title\": \"reprehenderit aute veniam laborum\",\n      \"type\": \"adipisicing culpa dolore in\"\n    }\n  ]\n}"
                },
                {
                  "name": "No Content",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/customers/:id",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "customers",
                        ":id"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "-5672936",
                          "description": "(Required) id"
                        }
                      ]
                    }
                  },
                  "status": "No Content",
                  "code": 204,
                  "_postman_previewlanguage": "text",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "cookie": [],
                  "body": ""
                },
                {
                  "name": "Unauthorized",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/customers/:id",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "customers",
                        ":id"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "-5672936",
                          "description": "(Required) id"
                        }
                      ]
                    }
                  },
                  "status": "Unauthorized",
                  "code": 401,
                  "_postman_previewlanguage": "text",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "cookie": [],
                  "body": ""
                },
                {
                  "name": "Forbidden",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/customers/:id",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "customers",
                        ":id"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "-5672936",
                          "description": "(Required) id"
                        }
                      ]
                    }
                  },
                  "status": "Forbidden",
                  "code": 403,
                  "_postman_previewlanguage": "text",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "cookie": [],
                  "body": ""
                }
              ]
            },
            {
              "name": "getWithoutGeneralLinks",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/hal+json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/customers/:id/v2",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "customers",
                    ":id",
                    "v2"
                  ],
                  "variable": [
                    {
                      "key": "id",
                      "value": "-5672936",
                      "description": "(Required) id"
                    }
                  ]
                }
              },
              "response": [
                {
                  "name": "OK",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/customers/:id/v2",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "customers",
                        ":id",
                        "v2"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "-5672936",
                          "description": "(Required) id"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/hal+json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"_links\": [\n    {\n      \"deprecation\": \"ut elit ad deserunt\",\n      \"href\": \"id ut ea\",\n      \"hreflang\": \"e\",\n      \"media\": \"magna ex eu\",\n      \"rel\": \"officia dolore aliquip\",\n      \"templated\": false,\n      \"title\": \"cul\",\n      \"type\": \"dolore sunt ullamco aliqua\"\n    },\n    {\n      \"deprecation\": \"ad culpa aliquip Lorem enim\",\n      \"href\": \"aute dolore sint\",\n      \"hreflang\": \"occaecat\",\n      \"media\": \"aliqua id\",\n      \"rel\": \"esse in sunt\",\n      \"templated\": true,\n      \"title\": \"cillum\",\n      \"type\": \"exercitation in in sunt anim\"\n    }\n  ],\n  \"customer\": {\n    \"company\": \"dolor veniam\",\n    \"errorMsg\": \"pariatur dolor culpa\",\n    \"id\": -33038095,\n    \"name\": \"irure mollit\"\n  }\n}"
                },
                {
                  "name": "Unauthorized",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/customers/:id/v2",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "customers",
                        ":id",
                        "v2"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "-5672936",
                          "description": "(Required) id"
                        }
                      ]
                    }
                  },
                  "status": "Unauthorized",
                  "code": 401,
                  "_postman_previewlanguage": "text",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "cookie": [],
                  "body": ""
                },
                {
                  "name": "Forbidden",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/customers/:id/v2",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "customers",
                        ":id",
                        "v2"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "-5672936",
                          "description": "(Required) id"
                        }
                      ]
                    }
                  },
                  "status": "Forbidden",
                  "code": 403,
                  "_postman_previewlanguage": "text",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "cookie": [],
                  "body": ""
                },
                {
                  "name": "Not Found",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/customers/:id/v2",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "customers",
                        ":id",
                        "v2"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "-5672936",
                          "description": "(Required) id"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "text",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "cookie": [],
                  "body": ""
                }
              ]
            }
          ]
        },
        {
          "name": "getAll",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/hal+json"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/customers",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "customers"
              ]
            }
          },
          "response": [
            {
              "name": "OK",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/customers",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "customers"
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/hal+json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"_embedded\": [\n    {\n      \"_links\": [\n        {\n          \"deprecation\": \"in\",\n          \"href\": \"esse ex laborum tempor fugiat\",\n          \"hreflang\": \"aute ipsum\",\n          \"media\": \"sed sit dolor\",\n          \"rel\": \"adipisicing quis laborum\",\n          \"templated\": true,\n          \"title\": \"cupidatat fugiat\",\n          \"type\": \"dolore consectetur ut magna\"\n        },\n        {\n          \"deprecation\": \"in mollit\",\n          \"href\": \"consequat\",\n          \"hreflang\": \"Lorem esse ullamco veniam\",\n          \"media\": \"et elit c\",\n          \"rel\": \"in Lorem\",\n          \"templated\": false,\n          \"title\": \"in et\",\n          \"type\": \"in aliquip\"\n        }\n      ],\n      \"customer\": {\n        \"company\": \"qui minim velit\",\n        \"errorMsg\": \"id mollit\",\n        \"id\": 69836947,\n        \"name\": \"esse dolore ut\"\n      }\n    },\n    {\n      \"_links\": [\n        {\n          \"deprecation\": \"nostrud dolor Dui\",\n          \"href\": \"ut exercitation enim\",\n          \"hreflang\": \"eiusmod anim consectetur dolore\",\n          \"media\": \"dolor nulla quis minim\",\n          \"rel\": \"cupidatat commodo Excepteur\",\n          \"templated\": false,\n          \"title\": \"eiusmod qui\",\n          \"type\": \"Duis consequat ad esse\"\n        },\n        {\n          \"deprecation\": \"voluptate dolore velit dolore\",\n          \"href\": \"aute\",\n          \"hreflang\": \"sed reprehenderit sunt incididunt nostrud\",\n          \"media\": \"proident nisi mollit sunt et\",\n          \"rel\": \"amet aute\",\n          \"templated\": false,\n          \"title\": \"nostrud id dolor sed\",\n          \"type\": \"laborum adipisicing magna mollit\"\n        }\n      ],\n      \"customer\": {\n        \"company\": \"commodo\",\n        \"errorMsg\": \"Excepteur fugiat Lorem esse eiusmod\",\n        \"id\": 43793247,\n        \"name\": \"quis voluptate Lorem cillum\"\n      }\n    }\n  ],\n  \"_links\": [\n    {\n      \"deprecation\": \"in in\",\n      \"href\": \"sint\",\n      \"hreflang\": \"irure eu\",\n      \"media\": \"exercitation\",\n      \"rel\": \"laborum\",\n      \"templated\": false,\n      \"title\": \"dolor\",\n      \"type\": \"adipisicing in ullamco \"\n    },\n    {\n      \"deprecation\": \"aute pro\",\n      \"href\": \"mollit reprehenderit in eu\",\n      \"hreflang\": \"culpa proident\",\n      \"media\": \"eiusmod Ut ex fugiat id\",\n      \"rel\": \"occaecat adipisicing aute nulla\",\n      \"templated\": true,\n      \"title\": \"ea tempor veniam commodo\",\n      \"type\": \"in\"\n    }\n  ]\n}"
            },
            {
              "name": "Unauthorized",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/customers",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "customers"
                  ]
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "_postman_previewlanguage": "text",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "cookie": [],
              "body": ""
            },
            {
              "name": "Forbidden",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/customers",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "customers"
                  ]
                }
              },
              "status": "Forbidden",
              "code": 403,
              "_postman_previewlanguage": "text",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "cookie": [],
              "body": ""
            },
            {
              "name": "Not Found",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/customers",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "customers"
                  ]
                }
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "text",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "cookie": [],
              "body": ""
            }
          ]
        },
        {
          "name": "update",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/hal+json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"company\": \"est dolor\",\n  \"errorMsg\": \"sint in pariatur ut\",\n  \"id\": 87573194,\n  \"name\": \"adipisicing tempor do\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/customers",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "customers"
              ]
            }
          },
          "response": [
            {
              "name": "OK",
              "originalRequest": {
                "method": "PUT",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"company\": \"est dolor\",\n  \"errorMsg\": \"sint in pariatur ut\",\n  \"id\": 87573194,\n  \"name\": \"adipisicing tempor do\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/customers",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "customers"
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/hal+json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"_links\": [\n    {\n      \"deprecation\": \"in velit\",\n      \"href\": \"dolor Duis proident\",\n      \"hreflang\": \"in officia labore\",\n      \"media\": \"dolore sit velit officia minim\",\n      \"rel\": \"non eu in in\",\n      \"templated\": true,\n      \"title\": \"ad nulla\",\n      \"type\": \"minim veniam nostrud\"\n    },\n    {\n      \"deprecation\": \"voluptate\",\n      \"href\": \"proident deserunt occaecat ipsum\",\n      \"hreflang\": \"do et id veniam deserunt\",\n      \"media\": \"Excepte\",\n      \"rel\": \"ea est\",\n      \"templated\": true,\n      \"title\": \"pariatur veniam\",\n      \"type\": \"ad anim incididunt sit\"\n    }\n  ],\n  \"customer\": {\n    \"company\": \"sit fugiat\",\n    \"errorMsg\": \"in\",\n    \"id\": 70775889,\n    \"name\": \"enim\"\n  }\n}"
            },
            {
              "name": "Created",
              "originalRequest": {
                "method": "PUT",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"company\": \"est dolor\",\n  \"errorMsg\": \"sint in pariatur ut\",\n  \"id\": 87573194,\n  \"name\": \"adipisicing tempor do\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/customers",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "customers"
                  ]
                }
              },
              "status": "Created",
              "code": 201,
              "_postman_previewlanguage": "text",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "cookie": [],
              "body": ""
            },
            {
              "name": "Unauthorized",
              "originalRequest": {
                "method": "PUT",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"company\": \"est dolor\",\n  \"errorMsg\": \"sint in pariatur ut\",\n  \"id\": 87573194,\n  \"name\": \"adipisicing tempor do\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/customers",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "customers"
                  ]
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "_postman_previewlanguage": "text",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "cookie": [],
              "body": ""
            },
            {
              "name": "Forbidden",
              "originalRequest": {
                "method": "PUT",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"company\": \"est dolor\",\n  \"errorMsg\": \"sint in pariatur ut\",\n  \"id\": 87573194,\n  \"name\": \"adipisicing tempor do\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/customers",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "customers"
                  ]
                }
              },
              "status": "Forbidden",
              "code": 403,
              "_postman_previewlanguage": "text",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "cookie": [],
              "body": ""
            },
            {
              "name": "Not Found",
              "originalRequest": {
                "method": "PUT",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"company\": \"est dolor\",\n  \"errorMsg\": \"sint in pariatur ut\",\n  \"id\": 87573194,\n  \"name\": \"adipisicing tempor do\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/customers",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "customers"
                  ]
                }
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "text",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "cookie": [],
              "body": ""
            }
          ]
        },
        {
          "name": "insert",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/hal+json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"company\": \"est dolor\",\n  \"errorMsg\": \"sint in pariatur ut\",\n  \"id\": 87573194,\n  \"name\": \"adipisicing tempor do\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/customers",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "customers"
              ]
            }
          },
          "response": [
            {
              "name": "OK",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"company\": \"est dolor\",\n  \"errorMsg\": \"sint in pariatur ut\",\n  \"id\": 87573194,\n  \"name\": \"adipisicing tempor do\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/customers",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "customers"
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/hal+json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"_links\": [\n    {\n      \"deprecation\": \"nulla ad proident quis\",\n      \"href\": \"est Excepteur veniam irure\",\n      \"hreflang\": \"irure\",\n      \"media\": \"irure aute proident\",\n      \"rel\": \"nulla velit\",\n      \"templated\": false,\n      \"title\": \"fugiat\",\n      \"type\": \"irure commodo\"\n    },\n    {\n      \"deprecation\": \"nulla\",\n      \"href\": \"reprehenderit nisi sint qui\",\n      \"hreflang\": \"quis adipisicing\",\n      \"media\": \"in labore irure Duis\",\n      \"rel\": \"voluptate commodo\",\n      \"templated\": false,\n      \"title\": \"cillum reprehenderit\",\n      \"type\": \"eu commodo do labore anim\"\n    }\n  ],\n  \"customer\": {\n    \"company\": \"cillum ea\",\n    \"errorMsg\": \"cillum labore cupidatat ipsum\",\n    \"id\": 44763365,\n    \"name\": \"cillum\"\n  }\n}"
            },
            {
              "name": "Created",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"company\": \"est dolor\",\n  \"errorMsg\": \"sint in pariatur ut\",\n  \"id\": 87573194,\n  \"name\": \"adipisicing tempor do\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/customers",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "customers"
                  ]
                }
              },
              "status": "Created",
              "code": 201,
              "_postman_previewlanguage": "text",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "cookie": [],
              "body": ""
            },
            {
              "name": "Unauthorized",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"company\": \"est dolor\",\n  \"errorMsg\": \"sint in pariatur ut\",\n  \"id\": 87573194,\n  \"name\": \"adipisicing tempor do\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/customers",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "customers"
                  ]
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "_postman_previewlanguage": "text",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "cookie": [],
              "body": ""
            },
            {
              "name": "Forbidden",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"company\": \"est dolor\",\n  \"errorMsg\": \"sint in pariatur ut\",\n  \"id\": 87573194,\n  \"name\": \"adipisicing tempor do\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/customers",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "customers"
                  ]
                }
              },
              "status": "Forbidden",
              "code": 403,
              "_postman_previewlanguage": "text",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "cookie": [],
              "body": ""
            },
            {
              "name": "Not Found",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"company\": \"est dolor\",\n  \"errorMsg\": \"sint in pariatur ut\",\n  \"id\": 87573194,\n  \"name\": \"adipisicing tempor do\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/customers",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "customers"
                  ]
                }
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "text",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "cookie": [],
              "body": ""
            }
          ]
        }
      ]
    },
    {
      "name": "pet",
      "item": [
        {
          "name": "{pet Id}",
          "item": [
            {
              "name": "Sample data contains german umlaut.",
              "request": {
                "auth": {
                  "type": "apikey",
                  "apikey": [
                    {
                      "key": "key",
                      "value": "api_key",
                      "type": "string"
                    },
                    {
                      "key": "value",
                      "value": "<API Key>",
                      "type": "string"
                    },
                    {
                      "key": "in",
                      "value": "header",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/pet/:petId",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "pet",
                    ":petId"
                  ],
                  "variable": [
                    {
                      "key": "petId",
                      "value": "99",
                      "description": "(Required) ID of pet to return"
                    }
                  ]
                },
                "description": "Returns a single pet with example of a german Umlaut."
              },
              "response": [
                {
                  "name": "successful operation",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "description": "Added as a part of security scheme: apikey",
                        "key": "api_key",
                        "value": "<API Key>"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/pet/:petId",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "variable": [
                        {
                          "key": "petId",
                          "value": "99",
                          "description": "(Required) ID of pet to return"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"name\": \"SChäferhund\",\n  \"photoUrls\": [\n    \"consec\",\n    \"eiusmod deserunt\"\n  ],\n  \"id\": 10,\n  \"category\": {\n    \"id\": 1,\n    \"name\": \"Dogs\"\n  },\n  \"tags\": [\n    {\n      \"id\": 1,\n      \"name\": \"tag1\"\n    },\n    {\n      \"id\": 1,\n      \"name\": \"tag1\"\n    }\n  ],\n  \"status\": \"available\"\n}"
                },
                {
                  "name": "Invalid ID supplied",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "description": "Added as a part of security scheme: apikey",
                        "key": "api_key",
                        "value": "<API Key>"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/pet/:petId",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "variable": [
                        {
                          "key": "petId",
                          "value": "99",
                          "description": "(Required) ID of pet to return"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "text",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "cookie": [],
                  "body": ""
                },
                {
                  "name": "Pet not found",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "description": "Added as a part of security scheme: apikey",
                        "key": "api_key",
                        "value": "<API Key>"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/pet/:petId",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "variable": [
                        {
                          "key": "petId",
                          "value": "99",
                          "description": "(Required) ID of pet to return"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "text",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "cookie": [],
                  "body": ""
                }
              ]
            },
            {
              "name": "Updates a pet in the store with form data",
              "request": {
                "auth": {
                  "type": "oauth2",
                  "oauth2": [
                    {
                      "key": "scope",
                      "value": "write:pets read:pets",
                      "type": "string"
                    },
                    {
                      "key": "authUrl",
                      "value": "https://petstore3.swagger.io/oauth/authorize",
                      "type": "string"
                    },
                    {
                      "key": "grant_type",
                      "value": "implicit",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/pet/:petId?name=dog&status=in progress.",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "pet",
                    ":petId"
                  ],
                  "query": [
                    {
                      "key": "name",
                      "value": "dog",
                      "description": "Name of pet that needs to be updated"
                    },
                    {
                      "key": "status",
                      "value": "in progress.",
                      "description": "Status of pet that needs to be updated"
                    }
                  ],
                  "variable": [
                    {
                      "key": "petId",
                      "value": "99",
                      "description": "(Required) ID of pet that needs to be updated"
                    }
                  ]
                },
                "description": "Updates a pet in the store with form data."
              },
              "response": [
                {
                  "name": "Invalid input",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "description": "Added as a part of security scheme: oauth2",
                        "key": "Authorization",
                        "value": "<token>"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/pet/:petId?name=dog&status=in progress.",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "query": [
                        {
                          "key": "name",
                          "value": "dog"
                        },
                        {
                          "key": "status",
                          "value": "in progress."
                        }
                      ],
                      "variable": [
                        {
                          "key": "petId",
                          "value": "99",
                          "description": "(Required) ID of pet that needs to be updated"
                        }
                      ]
                    }
                  },
                  "status": "Method Not Allowed",
                  "code": 405,
                  "_postman_previewlanguage": "text",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "cookie": [],
                  "body": ""
                }
              ]
            },
            {
              "name": "Deletes a pet",
              "request": {
                "auth": {
                  "type": "oauth2",
                  "oauth2": [
                    {
                      "key": "scope",
                      "value": "write:pets read:pets",
                      "type": "string"
                    },
                    {
                      "key": "authUrl",
                      "value": "https://petstore3.swagger.io/oauth/authorize",
                      "type": "string"
                    },
                    {
                      "key": "grant_type",
                      "value": "implicit",
                      "type": "string"
                    }
                  ]
                },
                "method": "DELETE",
                "header": [
                  {
                    "description": "Api key.",
                    "key": "API_KEY",
                    "value": "apikeyvalue1"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/pet/:petId",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "pet",
                    ":petId"
                  ],
                  "variable": [
                    {
                      "key": "petId",
                      "value": "99",
                      "description": "(Required) Pet id to delete"
                    }
                  ]
                },
                "description": "Deletes a pet."
              },
              "response": [
                {
                  "name": "Invalid pet value",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "description": "Added as a part of security scheme: oauth2",
                        "key": "Authorization",
                        "value": "<token>"
                      },
                      {
                        "description": "Api key.",
                        "key": "API_KEY",
                        "value": "apikeyvalue1"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/pet/:petId",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "variable": [
                        {
                          "key": "petId",
                          "value": "99",
                          "description": "(Required) Pet id to delete"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "text",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "cookie": [],
                  "body": ""
                }
              ]
            },
            {
              "name": "uploads an image",
              "request": {
                "auth": {
                  "type": "oauth2",
                  "oauth2": [
                    {
                      "key": "scope",
                      "value": "write:pets read:pets",
                      "type": "string"
                    },
                    {
                      "key": "authUrl",
                      "value": "https://petstore3.swagger.io/oauth/authorize",
                      "type": "string"
                    },
                    {
                      "key": "grant_type",
                      "value": "implicit",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/octet-stream"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "file",
                  "file": {}
                },
                "url": {
                  "raw": "{{baseUrl}}/pet/:petId/uploadimage?additionalMetadata=metadata",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "pet",
                    ":petId",
                    "uploadimage"
                  ],
                  "query": [
                    {
                      "key": "additionalMetadata",
                      "value": "metadata",
                      "description": "Additional Metadata"
                    }
                  ],
                  "variable": [
                    {
                      "key": "petId",
                      "value": "99",
                      "description": "(Required) ID of pet to update"
                    }
                  ]
                },
                "description": "Uploads an image."
              },
              "response": [
                {
                  "name": "successful operation",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "description": "Added as a part of security scheme: oauth2",
                        "key": "Authorization",
                        "value": "<token>"
                      }
                    ],
                    "body": {
                      "mode": "file",
                      "file": {}
                    },
                    "url": {
                      "raw": "{{baseUrl}}/pet/:petId/uploadimage?additionalMetadata=metadata",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "pet",
                        ":petId",
                        "uploadimage"
                      ],
                      "query": [
                        {
                          "key": "additionalMetadata",
                          "value": "metadata"
                        }
                      ],
                      "variable": [
                        {
                          "key": "petId",
                          "value": "99",
                          "description": "(Required) ID of pet to update"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": 123,\n  \"type\": \"responsetype\",\n  \"message\": \"Message.\"\n}"
                }
              ]
            }
          ]
        },
        {
          "name": "Update an existing pet",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": [
                {
                  "key": "scope",
                  "value": "write:pets read:pets",
                  "type": "string"
                },
                {
                  "key": "authUrl",
                  "value": "https://petstore3.swagger.io/oauth/authorize",
                  "type": "string"
                },
                {
                  "key": "grant_type",
                  "value": "implicit",
                  "type": "string"
                }
              ]
            },
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"SChäferhund\",\n  \"photoUrls\": [\n    \"do dolore magna et cupidatat\",\n    \"cillum eiusmod proident officia\"\n  ],\n  \"id\": 10,\n  \"category\": {\n    \"id\": 1,\n    \"name\": \"Dogs\"\n  },\n  \"tags\": [\n    {\n      \"id\": 1,\n      \"name\": \"tag1\"\n    },\n    {\n      \"id\": 1,\n      \"name\": \"tag1\"\n    }\n  ],\n  \"status\": \"available\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/pet",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "pet"
              ]
            },
            "description": "Update an existing pet by Id"
          },
          "response": [
            {
              "name": "Successful operation",
              "originalRequest": {
                "method": "PUT",
                "header": [
                  {
                    "description": "Added as a part of security scheme: oauth2",
                    "key": "Authorization",
                    "value": "<token>"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"SChäferhund\",\n  \"photoUrls\": [\n    \"consec\",\n    \"eiusmod deserunt\"\n  ],\n  \"id\": 10,\n  \"category\": {\n    \"id\": 1,\n    \"name\": \"Dogs\"\n  },\n  \"tags\": [\n    {\n      \"id\": 1,\n      \"name\": \"tag1\"\n    },\n    {\n      \"id\": 1,\n      \"name\": \"tag1\"\n    }\n  ],\n  \"status\": \"available\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/pet",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "pet"
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"name\": \"SChäferhund\",\n  \"photoUrls\": [\n    \"consec\",\n    \"eiusmod deserunt\"\n  ],\n  \"id\": 10,\n  \"category\": {\n    \"id\": 1,\n    \"name\": \"Dogs\"\n  },\n  \"tags\": [\n    {\n      \"id\": 1,\n      \"name\": \"tag1\"\n    },\n    {\n      \"id\": 1,\n      \"name\": \"tag1\"\n    }\n  ],\n  \"status\": \"available\"\n}"
            },
            {
              "name": "Invalid ID supplied",
              "originalRequest": {
                "method": "PUT",
                "header": [
                  {
                    "description": "Added as a part of security scheme: oauth2",
                    "key": "Authorization",
                    "value": "<token>"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"SChäferhund\",\n  \"photoUrls\": [\n    \"consec\",\n    \"eiusmod deserunt\"\n  ],\n  \"id\": 10,\n  \"category\": {\n    \"id\": 1,\n    \"name\": \"Dogs\"\n  },\n  \"tags\": [\n    {\n      \"id\": 1,\n      \"name\": \"tag1\"\n    },\n    {\n      \"id\": 1,\n      \"name\": \"tag1\"\n    }\n  ],\n  \"status\": \"available\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/pet",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "pet"
                  ]
                }
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "text",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "cookie": [],
              "body": ""
            },
            {
              "name": "Pet not found",
              "originalRequest": {
                "method": "PUT",
                "header": [
                  {
                    "description": "Added as a part of security scheme: oauth2",
                    "key": "Authorization",
                    "value": "<token>"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"SChäferhund\",\n  \"photoUrls\": [\n    \"consec\",\n    \"eiusmod deserunt\"\n  ],\n  \"id\": 10,\n  \"category\": {\n    \"id\": 1,\n    \"name\": \"Dogs\"\n  },\n  \"tags\": [\n    {\n      \"id\": 1,\n      \"name\": \"tag1\"\n    },\n    {\n      \"id\": 1,\n      \"name\": \"tag1\"\n    }\n  ],\n  \"status\": \"available\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/pet",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "pet"
                  ]
                }
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "text",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "cookie": [],
              "body": ""
            },
            {
              "name": "Validation exception",
              "originalRequest": {
                "method": "PUT",
                "header": [
                  {
                    "description": "Added as a part of security scheme: oauth2",
                    "key": "Authorization",
                    "value": "<token>"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"SChäferhund\",\n  \"photoUrls\": [\n    \"consec\",\n    \"eiusmod deserunt\"\n  ],\n  \"id\": 10,\n  \"category\": {\n    \"id\": 1,\n    \"name\": \"Dogs\"\n  },\n  \"tags\": [\n    {\n      \"id\": 1,\n      \"name\": \"tag1\"\n    },\n    {\n      \"id\": 1,\n      \"name\": \"tag1\"\n    }\n  ],\n  \"status\": \"available\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/pet",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "pet"
                  ]
                }
              },
              "status": "Method Not Allowed",
              "code": 405,
              "_postman_previewlanguage": "text",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "cookie": [],
              "body": ""
            }
          ]
        },
        {
          "name": "Add a new pet to the store",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": [
                {
                  "key": "scope",
                  "value": "write:pets read:pets",
                  "type": "string"
                },
                {
                  "key": "authUrl",
                  "value": "https://petstore3.swagger.io/oauth/authorize",
                  "type": "string"
                },
                {
                  "key": "grant_type",
                  "value": "implicit",
                  "type": "string"
                }
              ]
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"SChäferhund\",\n  \"photoUrls\": [\n    \"consec\",\n    \"eiusmod deserunt\"\n  ],\n  \"id\": 10,\n  \"category\": {\n    \"id\": 1,\n    \"name\": \"Dogs\"\n  },\n  \"tags\": [\n    {\n      \"id\": 1,\n      \"name\": \"tag1\"\n    },\n    {\n      \"id\": 1,\n      \"name\": \"tag1\"\n    }\n  ],\n  \"status\": \"available\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/pet",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "pet"
              ]
            },
            "description": "Add a new pet to the store"
          },
          "response": [
            {
              "name": "Successful operation",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "description": "Added as a part of security scheme: oauth2",
                    "key": "Authorization",
                    "value": "<token>"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"SChäferhund\",\n  \"photoUrls\": [\n    \"consec\",\n    \"eiusmod deserunt\"\n  ],\n  \"id\": 10,\n  \"category\": {\n    \"id\": 1,\n    \"name\": \"Dogs\"\n  },\n  \"tags\": [\n    {\n      \"id\": 1,\n      \"name\": \"tag1\"\n    },\n    {\n      \"id\": 1,\n      \"name\": \"tag1\"\n    }\n  ],\n  \"status\": \"available\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/pet",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "pet"
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"name\": \"SChäferhund\",\n  \"photoUrls\": [\n    \"consec\",\n    \"eiusmod deserunt\"\n  ],\n  \"id\": 10,\n  \"category\": {\n    \"id\": 1,\n    \"name\": \"Dogs\"\n  },\n  \"tags\": [\n    {\n      \"id\": 1,\n      \"name\": \"tag1\"\n    },\n    {\n      \"id\": 1,\n      \"name\": \"tag1\"\n    }\n  ],\n  \"status\": \"available\"\n}"
            },
            {
              "name": "Invalid input",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "description": "Added as a part of security scheme: oauth2",
                    "key": "Authorization",
                    "value": "<token>"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"SChäferhund\",\n  \"photoUrls\": [\n    \"consec\",\n    \"eiusmod deserunt\"\n  ],\n  \"id\": 10,\n  \"category\": {\n    \"id\": 1,\n    \"name\": \"Dogs\"\n  },\n  \"tags\": [\n    {\n      \"id\": 1,\n      \"name\": \"tag1\"\n    },\n    {\n      \"id\": 1,\n      \"name\": \"tag1\"\n    }\n  ],\n  \"status\": \"available\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/pet",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "pet"
                  ]
                }
              },
              "status": "Method Not Allowed",
              "code": 405,
              "_postman_previewlanguage": "text",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "cookie": [],
              "body": ""
            }
          ]
        },
        {
          "name": "Two media types, application/json and application/xml.",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": [
                {
                  "key": "scope",
                  "value": "write:pets read:pets",
                  "type": "string"
                },
                {
                  "key": "authUrl",
                  "value": "https://petstore3.swagger.io/oauth/authorize",
                  "type": "string"
                },
                {
                  "key": "grant_type",
                  "value": "implicit",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/pet/findbystatus?status=available",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "pet",
                "findbystatus"
              ],
              "query": [
                {
                  "key": "status",
                  "value": "available",
                  "description": "Status values that need to be considered for filter"
                }
              ]
            },
            "description": "Multiple status values can be provided with comma separated strings"
          },
          "response": [
            {
              "name": "successful operation",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "description": "Added as a part of security scheme: oauth2",
                    "key": "Authorization",
                    "value": "<token>"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/pet/findbystatus?status=available",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "pet",
                    "findbystatus"
                  ],
                  "query": [
                    {
                      "key": "status",
                      "value": "available"
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "[\n  {\n    \"name\": \"SChäferhund\",\n    \"photoUrls\": [\n      \"sit et\",\n      \"amet nisi qui dolor\"\n    ],\n    \"id\": 10,\n    \"category\": {\n      \"id\": 1,\n      \"name\": \"Dogs\"\n    },\n    \"tags\": [\n      {\n        \"id\": 1,\n        \"name\": \"tag1\"\n      },\n      {\n        \"id\": 1,\n        \"name\": \"tag1\"\n      }\n    ],\n    \"status\": \"available\"\n  },\n  {\n    \"name\": \"SChäferhund\",\n    \"photoUrls\": [\n      \"ut Lorem do magna esse\",\n      \"des\"\n    ],\n    \"id\": 10,\n    \"category\": {\n      \"id\": 1,\n      \"name\": \"Dogs\"\n    },\n    \"tags\": [\n      {\n        \"id\": 1,\n        \"name\": \"tag1\"\n      },\n      {\n        \"id\": 1,\n        \"name\": \"tag1\"\n      }\n    ],\n    \"status\": \"available\"\n  }\n]"
            },
            {
              "name": "Invalid status value",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "description": "Added as a part of security scheme: oauth2",
                    "key": "Authorization",
                    "value": "<token>"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/pet/findbystatus?status=available",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "pet",
                    "findbystatus"
                  ],
                  "query": [
                    {
                      "key": "status",
                      "value": "available"
                    }
                  ]
                }
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "text",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "cookie": [],
              "body": ""
            }
          ]
        },
        {
          "name": "Finds Pets by tags",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": [
                {
                  "key": "scope",
                  "value": "write:pets read:pets",
                  "type": "string"
                },
                {
                  "key": "authUrl",
                  "value": "https://petstore3.swagger.io/oauth/authorize",
                  "type": "string"
                },
                {
                  "key": "grant_type",
                  "value": "implicit",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/pet/findbytags?tags=tags1&tags=tags2",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "pet",
                "findbytags"
              ],
              "query": [
                {
                  "key": "tags",
                  "value": "tags1",
                  "description": "Tags to filter by"
                },
                {
                  "key": "tags",
                  "value": "tags2",
                  "description": "Tags to filter by"
                }
              ]
            },
            "description": "Multiple tags can be provided with comma separated strings. Use tag1, tag2, tag3 for testing."
          },
          "response": [
            {
              "name": "successful operation",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "description": "Added as a part of security scheme: oauth2",
                    "key": "Authorization",
                    "value": "<token>"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/pet/findbytags?tags=tags1&tags=tags2",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "pet",
                    "findbytags"
                  ],
                  "query": [
                    {
                      "key": "tags",
                      "value": "tags1"
                    },
                    {
                      "key": "tags",
                      "value": "tags2"
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "[\n  {\n    \"name\": \"SChäferhund\",\n    \"photoUrls\": [\n      \"sit et\",\n      \"amet nisi qui dolor\"\n    ],\n    \"id\": 10,\n    \"category\": {\n      \"id\": 1,\n      \"name\": \"Dogs\"\n    },\n    \"tags\": [\n      {\n        \"id\": 1,\n        \"name\": \"tag1\"\n      },\n      {\n        \"id\": 1,\n        \"name\": \"tag1\"\n      }\n    ],\n    \"status\": \"available\"\n  },\n  {\n    \"name\": \"SChäferhund\",\n    \"photoUrls\": [\n      \"ut Lorem do magna esse\",\n      \"des\"\n    ],\n    \"id\": 10,\n    \"category\": {\n      \"id\": 1,\n      \"name\": \"Dogs\"\n    },\n    \"tags\": [\n      {\n        \"id\": 1,\n        \"name\": \"tag1\"\n      },\n      {\n        \"id\": 1,\n        \"name\": \"tag1\"\n      }\n    ],\n    \"status\": \"available\"\n  }\n]"
            },
            {
              "name": "Invalid tag value",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "description": "Added as a part of security scheme: oauth2",
                    "key": "Authorization",
                    "value": "<token>"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/pet/findbytags?tags=tags1&tags=tags2",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "pet",
                    "findbytags"
                  ],
                  "query": [
                    {
                      "key": "tags",
                      "value": "tags1"
                    },
                    {
                      "key": "tags",
                      "value": "tags2"
                    }
                  ]
                }
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "text",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "cookie": [],
              "body": ""
            }
          ]
        },
        {
          "name": "uploads a binary file plus json",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": [
                {
                  "key": "scope",
                  "value": "write:pets read:pets",
                  "type": "string"
                },
                {
                  "key": "authUrl",
                  "value": "https://petstore3.swagger.io/oauth/authorize",
                  "type": "string"
                },
                {
                  "key": "grant_type",
                  "value": "implicit",
                  "type": "string"
                }
              ]
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "multipart/form-data"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "pet",
                  "value": "{\"name\":\"SChäferhund\",\"photoUrls\":[\"id velit\",\"eu voluptate exercitation Ut Duis\"],\"id\":10,\"category\":{\"id\":1,\"name\":\"Dogs\"},\"tags\":[{\"id\":1,\"name\":\"tag1\"},{\"id\":1,\"name\":\"tag1\"}],\"status\":\"available\"}",
                  "description": "(Required) ",
                  "type": "text"
                },
                {
                  "key": "fileName",
                  "type": "file",
                  "src": []
                }
              ]
            },
            "url": {
              "raw": "{{baseUrl}}/pet/uploadbinplusobject",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "pet",
                "uploadbinplusobject"
              ]
            },
            "description": "Uploads a binary file including a json object."
          },
          "response": [
            {
              "name": "successful operation",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "description": "Added as a part of security scheme: oauth2",
                    "key": "Authorization",
                    "value": "<token>"
                  }
                ],
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "pet",
                      "value": "{\"name\":\"SChäferhund\",\"photoUrls\":[\"id velit\",\"eu voluptate exercitation Ut Duis\"],\"id\":10,\"category\":{\"id\":1,\"name\":\"Dogs\"},\"tags\":[{\"id\":1,\"name\":\"tag1\"},{\"id\":1,\"name\":\"tag1\"}],\"status\":\"available\"}",
                      "description": "(Required) ",
                      "type": "text"
                    },
                    {
                      "key": "fileName",
                      "type": "file",
                      "src": []
                    }
                  ]
                },
                "url": {
                  "raw": "{{baseUrl}}/pet/uploadbinplusobject",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "pet",
                    "uploadbinplusobject"
                  ]
                }
              },
              "status": "Created",
              "code": 201,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"code\": 123,\n  \"type\": \"responsetype\",\n  \"message\": \"Message.\"\n}"
            },
            {
              "name": "internal error.",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "description": "Added as a part of security scheme: oauth2",
                    "key": "Authorization",
                    "value": "<token>"
                  }
                ],
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "pet",
                      "value": "{\"name\":\"SChäferhund\",\"photoUrls\":[\"id velit\",\"eu voluptate exercitation Ut Duis\"],\"id\":10,\"category\":{\"id\":1,\"name\":\"Dogs\"},\"tags\":[{\"id\":1,\"name\":\"tag1\"},{\"id\":1,\"name\":\"tag1\"}],\"status\":\"available\"}",
                      "description": "(Required) ",
                      "type": "text"
                    },
                    {
                      "key": "fileName",
                      "type": "file",
                      "src": []
                    }
                  ]
                },
                "url": {
                  "raw": "{{baseUrl}}/pet/uploadbinplusobject",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "pet",
                    "uploadbinplusobject"
                  ]
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "_postman_previewlanguage": "text",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "cookie": [],
              "body": ""
            }
          ]
        },
        {
          "name": "uploads a binary file",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": [
                {
                  "key": "scope",
                  "value": "write:pets read:pets",
                  "type": "string"
                },
                {
                  "key": "authUrl",
                  "value": "https://petstore3.swagger.io/oauth/authorize",
                  "type": "string"
                },
                {
                  "key": "grant_type",
                  "value": "implicit",
                  "type": "string"
                }
              ]
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "multipart/form-data"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "orderId",
                  "value": "67574056",
                  "type": "text"
                },
                {
                  "key": "userId",
                  "value": "97006158",
                  "type": "text"
                },
                {
                  "key": "fileName",
                  "type": "file",
                  "src": []
                }
              ]
            },
            "url": {
              "raw": "{{baseUrl}}/pet/uploadbinary",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "pet",
                "uploadbinary"
              ]
            },
            "description": "Uploads a binary file."
          },
          "response": [
            {
              "name": "successful operation",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "description": "Added as a part of security scheme: oauth2",
                    "key": "Authorization",
                    "value": "<token>"
                  }
                ],
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "orderId",
                      "value": "67574056",
                      "type": "text"
                    },
                    {
                      "key": "userId",
                      "value": "97006158",
                      "type": "text"
                    },
                    {
                      "key": "fileName",
                      "type": "file",
                      "src": []
                    }
                  ]
                },
                "url": {
                  "raw": "{{baseUrl}}/pet/uploadbinary",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "pet",
                    "uploadbinary"
                  ]
                }
              },
              "status": "Created",
              "code": 201,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"code\": 123,\n  \"type\": \"responsetype\",\n  \"message\": \"Message.\"\n}"
            },
            {
              "name": "internal error.",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "description": "Added as a part of security scheme: oauth2",
                    "key": "Authorization",
                    "value": "<token>"
                  }
                ],
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "orderId",
                      "value": "67574056",
                      "type": "text"
                    },
                    {
                      "key": "userId",
                      "value": "97006158",
                      "type": "text"
                    },
                    {
                      "key": "fileName",
                      "type": "file",
                      "src": []
                    }
                  ]
                },
                "url": {
                  "raw": "{{baseUrl}}/pet/uploadbinary",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "pet",
                    "uploadbinary"
                  ]
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "_postman_previewlanguage": "text",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "cookie": [],
              "body": ""
            }
          ]
        }
      ]
    },
    {
      "name": "store",
      "item": [
        {
          "name": "order",
          "item": [
            {
              "name": "{order Id}",
              "item": [
                {
                  "name": "Data contain float numbers.",
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/store/order/:orderId",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "store",
                        "order",
                        ":orderId"
                      ],
                      "variable": [
                        {
                          "key": "orderId",
                          "value": "1001",
                          "description": "(Required) ID of order that needs to be fetched"
                        }
                      ]
                    },
                    "description": "For valid response try integer IDs with value <= 5 or > 10. Other values will generate exceptions."
                  },
                  "response": [
                    {
                      "name": "successful operation",
                      "originalRequest": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseUrl}}/store/order/:orderId",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "store",
                            "order",
                            ":orderId"
                          ],
                          "variable": [
                            {
                              "key": "orderId",
                              "value": "1001",
                              "description": "(Required) ID of order that needs to be fetched"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"id\": 10,\n  \"petId\": 198772,\n  \"pricebrutto\": 345.45,\n  \"pricenetto\": 300,\n  \"rabatt\": 25.9,\n  \"quantity\": 7,\n  \"shipDate\": \"2017-07-21T17:32:28Z\",\n  \"status\": \"approved\",\n  \"complete\": true\n}"
                    },
                    {
                      "name": "Invalid ID supplied",
                      "originalRequest": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseUrl}}/store/order/:orderId",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "store",
                            "order",
                            ":orderId"
                          ],
                          "variable": [
                            {
                              "key": "orderId",
                              "value": "1001",
                              "description": "(Required) ID of order that needs to be fetched"
                            }
                          ]
                        }
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "_postman_previewlanguage": "text",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "cookie": [],
                      "body": ""
                    },
                    {
                      "name": "Order not found",
                      "originalRequest": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseUrl}}/store/order/:orderId",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "store",
                            "order",
                            ":orderId"
                          ],
                          "variable": [
                            {
                              "key": "orderId",
                              "value": "1001",
                              "description": "(Required) ID of order that needs to be fetched"
                            }
                          ]
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "_postman_previewlanguage": "text",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "cookie": [],
                      "body": ""
                    }
                  ]
                },
                {
                  "name": "Delete purchase order by ID",
                  "request": {
                    "method": "DELETE",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/store/order/:orderId",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "store",
                        "order",
                        ":orderId"
                      ],
                      "variable": [
                        {
                          "key": "orderId",
                          "value": "1001",
                          "description": "(Required) ID of the order that needs to be deleted"
                        }
                      ]
                    },
                    "description": "For valid response try integer IDs with value < 1000. Anything above 1000 or nonintegers will generate API errors"
                  },
                  "response": [
                    {
                      "name": "Invalid ID supplied",
                      "originalRequest": {
                        "method": "DELETE",
                        "header": [],
                        "url": {
                          "raw": "{{baseUrl}}/store/order/:orderId",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "store",
                            "order",
                            ":orderId"
                          ],
                          "variable": [
                            {
                              "key": "orderId",
                              "value": "1001",
                              "description": "(Required) ID of the order that needs to be deleted"
                            }
                          ]
                        }
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "_postman_previewlanguage": "text",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "cookie": [],
                      "body": ""
                    },
                    {
                      "name": "Order not found",
                      "originalRequest": {
                        "method": "DELETE",
                        "header": [],
                        "url": {
                          "raw": "{{baseUrl}}/store/order/:orderId",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "store",
                            "order",
                            ":orderId"
                          ],
                          "variable": [
                            {
                              "key": "orderId",
                              "value": "1001",
                              "description": "(Required) ID of the order that needs to be deleted"
                            }
                          ]
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "_postman_previewlanguage": "text",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "cookie": [],
                      "body": ""
                    }
                  ]
                }
              ]
            },
            {
              "name": "Place an order for a pet",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"id\": 10,\n  \"petId\": 198772,\n  \"pricebrutto\": 345.45,\n  \"pricenetto\": 300,\n  \"rabatt\": 25.9,\n  \"quantity\": 7,\n  \"shipDate\": \"2017-07-21T17:32:28Z\",\n  \"status\": \"approved\",\n  \"complete\": true\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/store/order",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "store",
                    "order"
                  ]
                },
                "description": "Place a new order in the store"
              },
              "response": [
                {
                  "name": "successful operation",
                  "originalRequest": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"id\": 10,\n  \"petId\": 198772,\n  \"pricebrutto\": 345.45,\n  \"pricenetto\": 300,\n  \"rabatt\": 25.9,\n  \"quantity\": 7,\n  \"shipDate\": \"2017-07-21T17:32:28Z\",\n  \"status\": \"approved\",\n  \"complete\": true\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/store/order",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "store",
                        "order"
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"id\": 10,\n  \"petId\": 198772,\n  \"pricebrutto\": 345.45,\n  \"pricenetto\": 300,\n  \"rabatt\": 25.9,\n  \"quantity\": 7,\n  \"shipDate\": \"2017-07-21T17:32:28Z\",\n  \"status\": \"approved\",\n  \"complete\": true\n}"
                },
                {
                  "name": "Invalid input",
                  "originalRequest": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"id\": 10,\n  \"petId\": 198772,\n  \"pricebrutto\": 345.45,\n  \"pricenetto\": 300,\n  \"rabatt\": 25.9,\n  \"quantity\": 7,\n  \"shipDate\": \"2017-07-21T17:32:28Z\",\n  \"status\": \"approved\",\n  \"complete\": true\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/store/order",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "store",
                        "order"
                      ]
                    }
                  },
                  "status": "Method Not Allowed",
                  "code": 405,
                  "_postman_previewlanguage": "text",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "cookie": [],
                  "body": ""
                }
              ]
            }
          ]
        },
        {
          "name": "JSON values in random order.",
          "request": {
            "auth": {
              "type": "apikey",
              "apikey": [
                {
                  "key": "key",
                  "value": "api_key",
                  "type": "string"
                },
                {
                  "key": "value",
                  "value": "<API Key>",
                  "type": "string"
                },
                {
                  "key": "in",
                  "value": "header",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/store/inventory",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "store",
                "inventory"
              ]
            },
            "description": "Returns a map of status codes to quantities. Values in JSON are in random order."
          },
          "response": [
            {
              "name": "successful operation",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "description": "Added as a part of security scheme: apikey",
                    "key": "api_key",
                    "value": "<API Key>"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/store/inventory",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "store",
                    "inventory"
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"velit_9f\": 7676142,\n  \"etb_\": 67965021\n}"
            }
          ]
        }
      ]
    },
    {
      "name": "user",
      "item": [
        {
          "name": "{username}",
          "item": [
            {
              "name": "Get user by user name",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/user/:username",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "user",
                    ":username"
                  ],
                  "variable": [
                    {
                      "key": "username",
                      "value": "jonny",
                      "description": "(Required) The name that needs to be fetched. Use user1 for testing. "
                    }
                  ]
                },
                "description": "Get user by user name"
              },
              "response": [
                {
                  "name": "successful operation",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/user/:username",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "user",
                        ":username"
                      ],
                      "variable": [
                        {
                          "key": "username",
                          "value": "jonny",
                          "description": "(Required) The name that needs to be fetched. Use user1 for testing. "
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"id\": 10,\n  \"username\": \"theUser\",\n  \"firstName\": \"John\",\n  \"lastName\": \"James\",\n  \"email\": \"john@email.com\",\n  \"password\": \"password\",\n  \"phone\": \"012345\",\n  \"userStatus\": 1\n}"
                },
                {
                  "name": "Invalid username supplied",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/user/:username",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "user",
                        ":username"
                      ],
                      "variable": [
                        {
                          "key": "username",
                          "value": "jonny",
                          "description": "(Required) The name that needs to be fetched. Use user1 for testing. "
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "text",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "cookie": [],
                  "body": ""
                },
                {
                  "name": "User not found",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/user/:username",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "user",
                        ":username"
                      ],
                      "variable": [
                        {
                          "key": "username",
                          "value": "jonny",
                          "description": "(Required) The name that needs to be fetched. Use user1 for testing. "
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "text",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "cookie": [],
                  "body": ""
                }
              ]
            },
            {
              "name": "Update user",
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"id\": 10,\n  \"username\": \"theUser\",\n  \"firstName\": \"John\",\n  \"lastName\": \"James\",\n  \"email\": \"john@email.com\",\n  \"password\": \"password\",\n  \"phone\": \"012345\",\n  \"userStatus\": 1\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/user/:username",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "user",
                    ":username"
                  ],
                  "variable": [
                    {
                      "key": "username",
                      "value": "jonny",
                      "description": "(Required) name that need to be deleted"
                    }
                  ]
                },
                "description": "This can only be done by the logged in user."
              },
              "response": [
                {
                  "name": "successful operation",
                  "originalRequest": {
                    "method": "PUT",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"id\": 10,\n  \"username\": \"theUser\",\n  \"firstName\": \"John\",\n  \"lastName\": \"James\",\n  \"email\": \"john@email.com\",\n  \"password\": \"password\",\n  \"phone\": \"012345\",\n  \"userStatus\": 1\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/user/:username",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "user",
                        ":username"
                      ],
                      "variable": [
                        {
                          "key": "username",
                          "value": "jonny",
                          "description": "(Required) name that need to be deleted"
                        }
                      ]
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "_postman_previewlanguage": "text",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "cookie": [],
                  "body": ""
                }
              ]
            },
            {
              "name": "Delete user",
              "request": {
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/user/:username",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "user",
                    ":username"
                  ],
                  "variable": [
                    {
                      "key": "username",
                      "value": "jonny",
                      "description": "(Required) The name that needs to be deleted"
                    }
                  ]
                },
                "description": "This can only be done by the logged in user."
              },
              "response": [
                {
                  "name": "Invalid username supplied",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/user/:username",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "user",
                        ":username"
                      ],
                      "variable": [
                        {
                          "key": "username",
                          "value": "jonny",
                          "description": "(Required) The name that needs to be deleted"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "text",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "cookie": [],
                  "body": ""
                },
                {
                  "name": "User not found",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/user/:username",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "user",
                        ":username"
                      ],
                      "variable": [
                        {
                          "key": "username",
                          "value": "jonny",
                          "description": "(Required) The name that needs to be deleted"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "text",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "cookie": [],
                  "body": ""
                }
              ]
            }
          ]
        },
        {
          "name": "Create user",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"id\": 10,\n  \"username\": \"theUser\",\n  \"firstName\": \"John\",\n  \"lastName\": \"James\",\n  \"email\": \"john@email.com\",\n  \"password\": \"password\",\n  \"phone\": \"012345\",\n  \"userStatus\": 1\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/user",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "user"
              ]
            },
            "description": "This can only be done by the logged in user."
          },
          "response": [
            {
              "name": "successful operation",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"id\": 10,\n  \"username\": \"theUser\",\n  \"firstName\": \"John\",\n  \"lastName\": \"James\",\n  \"email\": \"john@email.com\",\n  \"password\": \"password\",\n  \"phone\": \"012345\",\n  \"userStatus\": 1\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/user",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "user"
                  ]
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"id\": 10,\n  \"username\": \"theUser\",\n  \"firstName\": \"John\",\n  \"lastName\": \"James\",\n  \"email\": \"john@email.com\",\n  \"password\": \"password\",\n  \"phone\": \"012345\",\n  \"userStatus\": 1\n}"
            }
          ]
        },
        {
          "name": "Creates list of users with given input array",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "[\n  {\n    \"id\": 10,\n    \"username\": \"theUser\",\n    \"firstName\": \"John\",\n    \"lastName\": \"James\",\n    \"email\": \"john@email.com\",\n    \"password\": \"password\",\n    \"phone\": \"012345\",\n    \"userStatus\": 1\n  },\n  {\n    \"id\": 10,\n    \"username\": \"theUser\",\n    \"firstName\": \"John\",\n    \"lastName\": \"James\",\n    \"email\": \"john@email.com\",\n    \"password\": \"password\",\n    \"phone\": \"012345\",\n    \"userStatus\": 1\n  }\n]",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/user/createwithlist",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "user",
                "createwithlist"
              ]
            },
            "description": "Creates list of users with given input array"
          },
          "response": [
            {
              "name": "Successful operation",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "[\n  {\n    \"id\": 10,\n    \"username\": \"theUser\",\n    \"firstName\": \"John\",\n    \"lastName\": \"James\",\n    \"email\": \"john@email.com\",\n    \"password\": \"password\",\n    \"phone\": \"012345\",\n    \"userStatus\": 1\n  },\n  {\n    \"id\": 10,\n    \"username\": \"theUser\",\n    \"firstName\": \"John\",\n    \"lastName\": \"James\",\n    \"email\": \"john@email.com\",\n    \"password\": \"password\",\n    \"phone\": \"012345\",\n    \"userStatus\": 1\n  }\n]",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/user/createwithlist",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "user",
                    "createwithlist"
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"id\": 10,\n  \"username\": \"theUser\",\n  \"firstName\": \"John\",\n  \"lastName\": \"James\",\n  \"email\": \"john@email.com\",\n  \"password\": \"password\",\n  \"phone\": \"012345\",\n  \"userStatus\": 1\n}"
            },
            {
              "name": "successful operation",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "[\n  {\n    \"id\": 10,\n    \"username\": \"theUser\",\n    \"firstName\": \"John\",\n    \"lastName\": \"James\",\n    \"email\": \"john@email.com\",\n    \"password\": \"password\",\n    \"phone\": \"012345\",\n    \"userStatus\": 1\n  },\n  {\n    \"id\": 10,\n    \"username\": \"theUser\",\n    \"firstName\": \"John\",\n    \"lastName\": \"James\",\n    \"email\": \"john@email.com\",\n    \"password\": \"password\",\n    \"phone\": \"012345\",\n    \"userStatus\": 1\n  }\n]",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/user/createwithlist",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "user",
                    "createwithlist"
                  ]
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "_postman_previewlanguage": "text",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "cookie": [],
              "body": ""
            }
          ]
        },
        {
          "name": "Logs user into the system",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/user/login?username=jonny&password=password",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "user",
                "login"
              ],
              "query": [
                {
                  "key": "username",
                  "value": "jonny",
                  "description": "The user name for login"
                },
                {
                  "key": "password",
                  "value": "password",
                  "description": "The password for login in clear text"
                }
              ]
            },
            "description": "Logs user into the system"
          },
          "response": [
            {
              "name": "successful operation",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/user/login?username=jonny&password=password",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "user",
                    "login"
                  ],
                  "query": [
                    {
                      "key": "username",
                      "value": "jonny"
                    },
                    {
                      "key": "password",
                      "value": "password"
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "X-Rate-Limit",
                  "value": "100",
                  "description": "calls per hour allowed by the user"
                },
                {
                  "key": "X-Expires-After",
                  "value": "2017-07-21T17:32:28Z",
                  "description": "date in UTC when token expires"
                },
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "\"dolor proident\""
            },
            {
              "name": "Invalid username/password supplied",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/user/login?username=jonny&password=password",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "user",
                    "login"
                  ],
                  "query": [
                    {
                      "key": "username",
                      "value": "jonny"
                    },
                    {
                      "key": "password",
                      "value": "password"
                    }
                  ]
                }
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "text",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "cookie": [],
              "body": ""
            }
          ]
        },
        {
          "name": "Logs out current logged in user session",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/user/logout",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "user",
                "logout"
              ]
            },
            "description": "Logs out current logged in user session"
          },
          "response": [
            {
              "name": "successful operation",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/user/logout",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "user",
                    "logout"
                  ]
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "_postman_previewlanguage": "text",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "cookie": [],
              "body": ""
            }
          ]
        }
      ]
    },
    {
      "name": "Always fails with 400.",
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "Accept",
            "value": "application/json"
          }
        ],
        "url": {
          "raw": "{{baseUrl}}/oops",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "oops"
          ]
        },
        "description": "Produces sample error response."
      },
      "response": [
        {
          "name": "Never returned.",
          "originalRequest": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/oops",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "oops"
              ]
            }
          },
          "status": "OK",
          "code": 200,
          "_postman_previewlanguage": "text",
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "cookie": [],
          "body": ""
        },
        {
          "name": "Not modified.",
          "originalRequest": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/oops",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "oops"
              ]
            }
          },
          "status": "Not Modified",
          "code": 304,
          "_postman_previewlanguage": "text",
          "header": [
            {
              "key": "ETag",
              "value": "dolor proident",
              "description": "An ID for this version of the response."
            },
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "cookie": [],
          "body": ""
        },
        {
          "name": "Bad request.",
          "originalRequest": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/oops",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "oops"
              ]
            }
          },
          "status": "Bad Request",
          "code": 400,
          "_postman_previewlanguage": "json",
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "cookie": [],
          "body": "{\n  \"status\": 400,\n  \"error\": \"Bad Request\",\n  \"path\": \"http://cSiyVpNRZSghO.erxECH0LRJ5\",\n  \"timestamp\": \"2019-08-21T21:41:46.158+0000\",\n  \"message\": \"Request failed schema validation\",\n  \"trace\": \"com.atlassian.oai.validator.springmvc.InvalidRequestException: ...\"\n}"
        }
      ]
    },
    {
      "name": "Mediatype plain/text.",
      "request": {
        "auth": {
          "type": "apikey",
          "apikey": [
            {
              "key": "key",
              "value": "api_key",
              "type": "string"
            },
            {
              "key": "value",
              "value": "<API Key>",
              "type": "string"
            },
            {
              "key": "in",
              "value": "header",
              "type": "string"
            }
          ]
        },
        "method": "GET",
        "header": [
          {
            "key": "Accept",
            "value": "text/plain"
          }
        ],
        "url": {
          "raw": "{{baseUrl}}/version",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "version"
          ]
        },
        "description": "Returns plain text."
      },
      "response": [
        {
          "name": "successful operation",
          "originalRequest": {
            "method": "GET",
            "header": [
              {
                "description": "Added as a part of security scheme: apikey",
                "key": "api_key",
                "value": "<API Key>"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/version",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "version"
              ]
            }
          },
          "status": "OK",
          "code": 200,
          "_postman_previewlanguage": "text",
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "cookie": [],
          "body": "Version 1.0.0"
        }
      ]
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:8080/api/v3",
      "type": "string"
    }
  ]
}